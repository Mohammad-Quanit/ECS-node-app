version: 0.2

env:
  variables:
    AWS_REGION: us-west-2 # checkfor specific region
    AWS_ACCOUNT_ID: xxxxxxxxxx # account id
    IMAGE_NAME: app-container-registry # image name

phases:
  install:
    runtime-versions:
      docker: 18
  pre_build:
    commands:
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - npm install
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
  build:
    commands:
      - echo Building application
      - docker build -t $IMAGE_NAME .
      - docker tag $IMAGE_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME:latest
  post_build:
    commands:
      - echo Pushing the Docker images...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME:latest
      - echo Writing image definitions file...
      - printf '{"ImageURI":"'"$AWS_ACCOUNT_ID"'.dkr.ecr.'"$AWS_REGION"'.amazonaws.com/'"$IMAGE_NAME"':latest"}' > imageDetail.json
      # - printf '[{"name":"node-app-container","imageUri":"%s"}]' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME:latest > imageDetail.json


# artifacts:
#   files:
#     - '**/*'
artifacts:
  files:
    - "imageDetail.json"
    - "appspec.yaml"
    - "taskdef.json"
  secondary-artifacts:
    DefinitionArtifact:
      files:
        - appspec.yaml
        - taskdef.json
    ImageArtifact:
      files:
        - imageDetail.json

cache:
  paths:
    - ~/.npm
    - /var/lib/docker/**/*
